#!/bin/bash

set +x

ZDE_PATH=$(dirname "$0")
mkdir -p ~/.zde

ZDE_BRANCH="${ZDE_BRANCH:-main}"

ZDE_MOUNTED=
if [ -f ~/.zde/mount ]; then
  ZDE_MOUNTED=$(cat ~/.zde/mount)
fi

COMMAND=$1
shift

RUNNING="1"
CONTAINER_CMD="${ZDE_USE:-default}"
CONTAINER_NAME=zeal8bit
CONTAINER_SERVICE=zeal8bit-dev-env
COMPOSE_PATH="$ZDE_PATH/docker-compose.yml"
export ZDE_IMAGE=zoul0813/zeal-dev-environment
export ZDE_VERSION="${ZDE_VERSION:=latest}"
export ZEAL_KERNEL_VERSION=$(git -C $ZDE_PATH/home/Zeal-8-bit-OS describe --tags)
# export ZDE_PLATFORM=linux/amd64
if ([ "$CONTAINER_CMD" = "default" ] || [ "$CONTAINER_CMD" = "docker" ]) && command -v docker 2>&1 >/dev/null; then
  CONTAINER_CMD=docker
  $CONTAINER_CMD ps --format '{{.Names}}' | grep -xq "$CONTAINER_NAME"
  RUNNING=$?
elif ([ "$CONTAINER_CMD" = "default" ] || [ "$CONTAINER_CMD" = "podman" ]) && command -v podman 2>&1 >/dev/null; then
  CONTAINER_CMD=podman
  $CONTAINER_CMD ps --format '{{.Names}}' | grep -xq "$CONTAINER_NAME"
  RUNNING=$?
else
  echo "WARNING: docker/podman not found, ensure docker, or podman, is installed before using ZDE"
fi
# CONTAINER_EXEC=("$CONTAINER_CMD" "compose" "-f" "$COMPOSE_PATH" "run" "-i" "--rm" "--user" $(id -u):$(id -g) "--entrypoint" "")
HOST_UID=$(id -u)
HOST_GID=$(id -g)
CONTAINER_EXEC=("$CONTAINER_CMD" "compose" "-f" "$COMPOSE_PATH" "run" "-i" "--rm" "-e" "HOST_UID=${HOST_UID}" "-e" "HOST_GID=${HOST_GID}")


emulator()
{
  CMD=$1
  case $CMD in
    start)
      shift
      emulator_start $@
      ;;
    stop)
      shift
      emulator_stop
      ;;
    *)
      emulator_start $@
      ;;
  esac
}

emulator_start()
{
  # supervisord -c /etc/supervisord.conf
  $CONTAINER_CMD exec -t zeal8bit /opt/penv/bin/supervisorctl status emulator
  STATUS=$?
  if [ "$STATUS" = "3" ]; then
    $CONTAINER_CMD exec -t zeal8bit /opt/penv/bin/supervisorctl start emulator
  fi
  PATH=$PATH:"$ZDE_PATH"/bin "$ZDE_PATH"/bin/xdg-open "http://127.0.0.1:1145/?r=latest&$1"
}

emulator_stop()
{
  $CONTAINER_CMD exec -t zeal8bit /opt/penv/bin/supervisorctl status emulator
  STATUS=$?
  if [ "$STATUS" = "0" ]; then
    $CONTAINER_CMD exec -t zeal8bit /opt/penv/bin/supervisorctl stop emulator
  fi
}

playground()
{
  CMD=$1
  case $CMD in
    start)
      shift
      playground_start $@
      ;;
    stop)
      shift
      playground_stop
      ;;
    *)
      playground_start $@
      ;;
  esac
}

playground_start()
{
  # supervisord -c /etc/supervisord.conf
  $CONTAINER_CMD exec -t zeal8bit /opt/penv/bin/supervisorctl status playground
  STATUS=$?
  if [ "$STATUS" = "3" ]; then
    $CONTAINER_CMD exec -t zeal8bit /home/zeal8bit/Zeal-Playground/tools/build_manifest.py /home/zeal8bit/Zeal-Playground/files /home/zeal8bit/Zeal-Playground/files/manifest.json
    $CONTAINER_CMD exec -t zeal8bit /opt/penv/bin/supervisorctl start playground
  fi
  PATH=$PATH:"$ZDE_PATH"/bin "$ZDE_PATH"/bin/xdg-open "http://127.0.0.1:1155/?r=latest&$1"
}

playground_stop()
{
  $CONTAINER_CMD exec -t zeal8bit /opt/penv/bin/supervisorctl status playground
  STATUS=$?
  if [ "$STATUS" = "0" ]; then
    $CONTAINER_CMD exec -t zeal8bit /opt/penv/bin/supervisorctl stop playground
  fi
}

stop()
{
  if [ "$RUNNING" = "0" ]; then
    $CONTAINER_CMD compose -f "$COMPOSE_PATH" stop
    if [ -e ~/.zde/mount ]; then
      rm ~/.zde/mount
    fi
    RUNNING="1"
  else
    echo "ZDE is not running"
  fi
}

start()
{
  if [ "$RUNNING" = "1" ]; then
    $CONTAINER_CMD compose -f "$COMPOSE_PATH" up -d
    echo $PWD > ~/.zde/mount
    RUNNING="0"
  else
    echo "ZDE is already running"
  fi
}

make_image()
{
  TYPE=$1
  SIZE=$2

  if [ -f "$ZDE_PATH/mnt/$TYPE.img" ]; then
    read -p "Image exists, overwrite? ([Y]es, [N]o)" -n 1 -r
    if [[ ! $REPLY =~ ^[Yy]$ ]]
    then
        [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1
    fi

    rm "$ZDE_PATH/mnt/$TYPE.img"
  fi

  shift
  case $TYPE in
    eeprom)
      "${CONTAINER_EXEC[@]}" $CONTAINER_SERVICE /home/zeal8bit/zsync.sh eeprom ${SIZE:=32}
      ;;
    cf)
      $"${CONTAINER_EXEC[@]}" $CONTAINER_SERVICE /home/zeal8bit/zsync.sh cf ${SIZE:=64}
      ;;
    sd)
      $"${CONTAINER_EXEC[@]}" $CONTAINER_SERVICE /home/zeal8bit/zsync.sh sd ${SIZE:=64}
      ;;
    *)
      echo "Invalid arguments, must provide TYPE (eeprom, cf, sd)"
      ;;
  esac
}

case $COMMAND in
  -i)
    echo "ZDE: Interactive Mode"
    if [ "$1" = "-b" ]; then
      CONTAINER_SERVICE=zeal8bit-build-env
    fi
    $"${CONTAINER_EXEC[@]}" -e ZEAL_KERNEL_VERSION=$ZEAL_KERNEL_VERSION $CONTAINER_SERVICE /bin/bash
    ;;
  activate)
    if [ -t 1 ]; then
      # stdout is a terminal → probably not being used with eval
      echo "⚠️  This script must be run with: eval \"\$(zde activate)\"" >&2
    else
      $ZDE_PATH/bin/activate
    fi
    ;;
  update)
    RESTART=$RUNNING
    if [ "$RUNNING" = "0" ]; then
      stop
    fi
    echo "Pulling latest Zeal 8-bit repositories"
    git -C "$ZDE_PATH" checkout $ZDE_BRANCH
    git -C "$ZDE_PATH" submodule init
    git -C "$ZDE_PATH" pull --recurse-submodules origin $ZDE_BRANCH
    $CONTAINER_CMD image pull docker.io/${ZDE_IMAGE}:${ZDE_VERSION}
    if [ "$RESTART" = "0" ]; then
      start
    fi
    ;;
  status)
    echo -n "ZDE is "
    if [ "$RUNNING" = "1" ]; then
      echo "stopped"
    else
      echo -n "running, mounted to ${ZDE_MOUNTED}"
    fi
    echo " with ${CONTAINER_CMD}"
    ;;
  start|restart)
    if [ "$RUNNING" = "0" ]; then
      stop
    fi
    start $@
    ;;
  stop)
    stop $@
    ;;
  emu|emulator)
    if [ "$RUNNING" = "1" ]; then
      start
    fi
    emulator $@
    ;;
  playground)
    if [ "$RUNNING" = "1" ]; then
      start
    fi
    playground $@
    ;;
  make)
    if [[ ! -z "${ASEPRITE_PATH}" ]]; then
      make -f "$ZDE_PATH/home/zeal-game-dev-kit/aseprite.mk"
    fi
    $"${CONTAINER_EXEC[@]}" $CONTAINER_SERVICE make $@
    ;;
  cmake)
    BUILD_DIR=${1:-build}
    if [ ! -d "$BUILD_DIR" ]; then
      echo "Generating build directory"
      $CONTAINER_CMD compose -f "$COMPOSE_PATH" run -i --rm --entrypoint "" $CONTAINER_SERVICE cmake -B $BUILD_DIR
    else
      echo "Build directory exists"
    fi
    $"${CONTAINER_EXEC[@]}" $CONTAINER_SERVICE cmake --build $BUILD_DIR
    ;;
  kernel)
    KERNEL_CONFIG=${1:-zeal8bit}
    $"${CONTAINER_EXEC[@]}"  -e ZEAL_KERNEL_VERSION=$ZEAL_KERNEL_VERSION $CONTAINER_SERVICE /home/zeal8bit/kernel.sh $KERNEL_CONFIG
    ;;
  create)
    $CONTAINER_CMD run --rm -v $(pwd):/tmp -v $ZDE_PATH/home:/home/zeal8bit --env-file=$ZDE_PATH/.env $ZDE_IMAGE:$ZDE_VERSION /home/zeal8bit/templates/create.sh "$@"
    ;;
  image)
    make_image $@
    ;;
  rebuild)
    if [ "$RUNNING" = "0" ]; then
      $CONTAINER_CMD compose -f "$COMPOSE_PATH" down
    fi
    $CONTAINER_CMD compose -f "$COMPOSE_PATH" build
    ;;
  *)
    echo "Help: update, status, start, stop, make, emu[lator], create, image"
    ;;
esac
